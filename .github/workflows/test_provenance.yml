name: CI-Test-Provenance
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  build-with-gradle-build-action-cache:
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'
      - uses: gradle/gradle-build-action@v2
        with:
          arguments: build --scan
          
      - name: Do LS
        shell: bash
        id: ls
        run: |
              ls
              echo "//////////////////////////"
              ls build
              echo "//////////////////////////"
              ls build/generated
              echo "//////////////////////////"
              ls build/libs
        
      - name: Generate hashes
        shell: bash
        id: hash
        run: |
          # sha256sum generates sha256 hash for all artifacts.
          # base64 -w0 encodes to base64 and outputs on a single line.
          # sha256sum artifact1 artifact2 ... | base64 -w0
          echo "hashes=$(sha256sum build/libs/gradle-github-actions-example.jar | base64 -w0)"
          echo "hashes=$(sha256sum build/libs/gradle-github-actions-example.jar | base64 -w0)" >> "$GITHUB_OUTPUT"
          
      - name: Upload artifactJar
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # tag=v3.1.0
        with:
          name: artifactJar
          path: build/libs/gradle-github-actions-example.jar
          if-no-files-found: error
          retention-days: 5

  showhash:
    needs: [build-with-gradle-build-action-cache]
    runs-on: [self-hosted, ubuntu-latest, linux, x64, gpu]
    permissions:
      actions: read
      id-token: write
      contents: write
    steps:
      - name: Do show hash
        shell: bash
        id: show-hash
        run: echo "${{ needs.build-with-gradle-build-action-cache.outputs.hashes }}"
          
          
            # This step calls the generic workflow to generate provenance.
  provenance:
    needs: [build-with-gradle-build-action-cache]
    permissions:
      actions: read
      id-token: write
      contents: write
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.7.0
    with:
      base64-subjects: "${{ needs.build.outputs.hashes }}"
      # Upload provenance to a new release
      upload-assets: true

  # This step uploads our artifacts to the tagged GitHub release.
  release:
    needs: [build-with-gradle-build-action-cache, provenance]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifactJar
        uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # tag=v2.1.0
        with:
          name: artifactJar

      - name: Upload assets
        uses: softprops/action-gh-release@1e07f4398721186383de40550babbdf2b84acfc5 # v0.1.14
        with:
          files: |
            artifactJar


